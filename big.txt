 void MutationDna(char a, char b, int n) {
        int i = 0;
        int j = 0; //movement step
        while (i <= n) {
            if (DNA[j] == a) {
                DNA[j] = b;
                i++;
                j++;
                if (i == n) { break; }
            } else {
                j++;
            }
        }
        cout << DNA << "\t";
        cout << make_Dna(DNA) << endl;
    }

    //----------------------------------------------------------------------------

    //Big  Mutation:
    void BigMutationRna(string r, string t) {
        int x, y;
        x = RNA.find(r);
        y = t.length();
        RNA.replace(x, y, t);
        cout << RNA << endl;
    }

    //----------------------------------------------------------------------------

    void BigMutationDna(string r, string t) {
        int x, y;
        x = RNA.find(r); //ابتدا بازه
        y = t.length(); // انتها بازه
        RNA.replace(x, y, t);  // جای گزینی اون با رشته مد نظر
        cout << RNA << "\n" << make_Dna(RNA) << endl;
    }

    //----------------------------------------------------------------------------

    void ReverseRna(string rt) { //rt ke input function
        int x, y;
        string rrt; //reverse rt

        x = RNA.find(rt); //
        y = rt.length();
        // موقعیت رشته اول اون ورودی مارو بهمون میده که برای راحتی اوی متغییر ذخیره میکنیم
        rrt = reverse1(rt);
        RNA.replace(x, y, rrt);
        cout << RNA << endl;
    }

    //----------------------------------------------------------------------------

    void ReverseDna(string rt) { //rt ke input function
        int x, y;
        string rrt; //reverse rt
        y = rt.length();
        x = RNA.find(rt); //موقعیت رشته اول اون ورودی مارو بهمون میده که برای راحتی اوی متغییر ذخیره میکنیم
        rrt = reverse1(rt);
        RNA.replace(x, y, rrt);
        cout << RNA << "\t";
        cout << make_Dna(RNA) << endl;
        // the gene class finish
        // only debug remain